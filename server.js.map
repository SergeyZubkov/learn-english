{"version":3,"file":"server.js","sources":["webpack:///webpack/bootstrap 9e86304a44c7f4ef9720","webpack:///external \"react\"","webpack:///external \"react-bootstrap\"","webpack:///external \"moment\"","webpack:///src/browser/dataService.js","webpack:///external \"mongoose\"","webpack:///external \"react-router-dom\"","webpack:///src/server/db/models/word.js","webpack:///external \"react-router-bootstrap\"","webpack:///src/shared/routes.js","webpack:///src/shared/Test/Test.js","webpack:///external \"react-dom\"","webpack:///src/shared/Dictionary/Dictionary.js","webpack:///src/shared/Dictionary/WordForm.js","webpack:///src/server/index.js","webpack:///external \"serialize-javascript\"","webpack:///external \"express\"","webpack:///external \"react-dom/server\"","webpack:///external \"source-map-support\"","webpack:///external \"isomorphic-fetch\"","webpack:///external \"body-parser\"","webpack:///src/server/db/connect.js","webpack:///src/server/db/constants.js","webpack:///src/server/db/models/index.js","webpack:///external \"meanie-mongoose-to-json\"","webpack:///src/shared/App.js","webpack:///src/shared/Test/TestWord.js","webpack:///src/shared/Test/Result.js","webpack:///src/shared/Dictionary/Row.js","webpack:///external \"react-fontawesome\"","webpack:///src/shared/Dictionary/MyPagination/MyPagination.js","webpack:///src/shared/MyToggle/MyToggle.js","webpack:///src/shared/Dictionary/CreateWordForm.js","webpack:///external \"prop-types\"","webpack:///src/shared/Dictionary/EditWordForm.js","webpack:///src/shared/NavBar.js","webpack:///src/server/db/controllers/word.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 9e86304a44c7f4ef9720","module.exports = require(\"react\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react\"\n// module id = 0\n// module chunks = 0","module.exports = require(\"react-bootstrap\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-bootstrap\"\n// module id = 1\n// module chunks = 0","module.exports = require(\"moment\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"moment\"\n// module id = 2\n// module chunks = 0","const headers = {\r\n\t'Accept': 'application/json',\r\n\t'Content-Type': 'application/json'\r\n}\r\n\r\nexport default {\r\n\tgetInitialStateForDictionary() {\r\n\t\tlet res = {}\r\n\r\n\t\treturn this.getWords('select=recent')\r\n\t\t.then(result => {\r\n\t\t\tres = {res,...result}\r\n\t\t\treturn this.getWordsCount()\r\n\t\t})\r\n\t\t.then(count => {\r\n\t\t\tres.wordsCount = count\r\n\t\t\treturn res;\r\n\t\t})\r\n\t},\r\n\tgetWordsCount() {\r\n\t\treturn fetch('http://localhost:3000/api/words/count')\r\n\t\t.then(result => {\r\n\t\t\tconsole.log(result.status);\r\n\t\t\treturn result.json()\r\n\t\t})\r\n\t\t.catch(err => console.log(err))\r\n\t},\r\n\tgetWords(query = '') {\r\n\t\tif (query) {\r\n\t\t\tquery =\t\"?\" + query;\r\n\t\t}\r\n\t\treturn fetch('http://localhost:3000/api/words' + query)\r\n\t\t.then(result => result.json())\r\n\t\t.catch(err => console.log(err))\r\n\t},\r\n\tgetWordsByDate(date) {\r\n\t\t\r\n\t\treturn fetch('http://localhost:3000/api/wordsByDate?date=' + date.date + '&month=' + date.month + '&year=' + date.year)\r\n\t\t.then(result => result.json())\r\n\t\t.catch(err => console.log(err))\r\n\t},\r\n\tgetWordsByMonth(date) {\r\n\t\treturn fetch('http://localhost:3000/api/wordsByMonth?&month=' + date.month + '&year=' + date.year)\r\n\t\t.then(result => result.json())\r\n\t\t.catch(err => console.log(err))\r\n\t},\r\n\tcreateWord(word) {\r\n\t\treturn fetch('http://localhost:3000/api/words', {method: 'POST', body: JSON.stringify(word), headers})\r\n\t\t.then(() => console.log('add word success!!'))\r\n\t\t.catch(err => console.log(err))\r\n\t},\r\n\tupdateWord(word) {\r\n\t\treturn fetch('http://localhost:3000/api/words', {method: 'PUT', body: JSON.stringify(word), headers})\r\n\t\t.then((updatedWord) => console.log(updatedWord))\r\n\t\t.catch((err) => console.log(err))\r\n\t},\r\n\tremoveWord(id) {\r\n\t\treturn fetch('http://localhost:3000/api/words/' + id, {method: 'DELETE', headers})\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// src/browser/dataService.js","module.exports = require(\"mongoose\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"mongoose\"\n// module id = 4\n// module chunks = 0","module.exports = require(\"react-router-dom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router-dom\"\n// module id = 5\n// module chunks = 0","\r\n/**\r\n * Defining a Word Model in mongoose\r\n * Code modified from https://github.com/sahat/hackathon-starter\r\n */\r\nimport mongoose from 'mongoose';\r\n// Other oauthtypes to be added\r\nimport toJson from 'meanie-mongoose-to-json';\r\n\r\nimport moment from 'moment';\r\n/*\r\n Word Schema\r\n */\r\n\r\nconst WordSchema = new mongoose.Schema({\r\n  ru: { type: String},\r\n  en: {type: String},\r\n  createdDate: {\r\n  \tday: Number,\r\n  \tmonth: Number,\r\n  \tyear: Number,\r\n  \tfull: Date\r\n  },\r\n  repetitionDate: {type: Date},\r\n  repetitionCount: {type: Number},\r\n  attemptCount: {type: Number}\r\n});\r\n\r\nWordSchema.index({\"createdDate.year\": -1, \"createdDate.month\": -1, \"cretedDate.day\": -1});\r\n\r\nWordSchema.virtual('createdDateISO').set(function(dateISOString) {\r\n  const d = moment(dateISOString);\r\n\r\n  this.createdDate = {\r\n    day: d.date(),\r\n    month: d.month(),\r\n    year: d.year(),\r\n    full: dateISOString\r\n  }\r\n})\r\n\r\nWordSchema.plugin(toJson);\r\n\r\n/**\r\n * Statics\r\n */\r\n\r\nWordSchema.statics = {};\r\n\r\nexport default mongoose.model('Word', WordSchema);\n\n\n// WEBPACK FOOTER //\n// src/server/db/models/word.js","module.exports = require(\"react-router-bootstrap\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-router-bootstrap\"\n// module id = 7\n// module chunks = 0","import Test from './Test/Test';\r\nimport Dictionary from './Dictionary/Dictionary';\r\nimport CreateWordForm from './Dictionary/CreateWordForm';\r\nimport EditWordForm from './Dictionary/EditWordForm';\r\nconst routes = [\r\n\t{\r\n\t\tpath: '/',\r\n\t\tcomponent: Test,\r\n\t\texact: true\r\n\t},\r\n\t{\r\n\t\tpath: '/dictionary',\r\n\t\tcomponent: Dictionary,\r\n\t\texact: true\r\n\t},\r\n\t{\r\n\t\tpath: '/dictionary/create-word',\r\n\t\tcomponent: CreateWordForm,\r\n\t\texact: true\r\n\t},\r\n\t{\r\n\t\tpath: '/dictionary/edit-word/id=:id&en=:en&ru=:ru',\r\n\t\tcomponent: EditWordForm,\r\n\t\texact: true\r\n\t}\r\n]\r\n\r\nexport default routes;\n\n\n// WEBPACK FOOTER //\n// src/shared/routes.js","import React, { Component } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\n\r\nimport TestWord from './TestWord';\r\nimport Result from './Result';\r\nimport DataService from '../../browser/dataService';\r\n\r\nexport default class Test extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tlet initialState;\r\n\r\n\t\tif (props.staticContext) {\r\n\t\t\tinitialState = props.staticContext.initialState;\r\n\t\t} else {\r\n\t\t\tinitialState = window.__initialState__;\r\n\t\t\tdelete window.__initialState__;\r\n\t\t}\r\n\r\n\t\tthis.state = {\r\n\t\t\twords: initialState||[],\r\n\t\t\tcurrentWordIdx: 0,\r\n\t\t\tcurrentTestStage: 'prestart',\r\n\t\t\tanswers: []\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (this.state.words) {\r\n\t\t\tTest.requestInitialState()\r\n\t\t\t.then(words => this.setState({words}))\r\n\t\t}\r\n\t}\r\n\thandleTestWord = (testWord) => {\r\n\t\tlet {currentWordIdx, words} = this.state;\r\n\t\tconsole.log(`${words[currentWordIdx].en} - ${testWord} / ${words[currentWordIdx].ru}`)\r\n\t\tthis.state.answers.push(testWord);\r\n\r\n\t\tif (currentWordIdx < words.length-1) {\r\n\t\t\tthis.setState({currentWordIdx: ++currentWordIdx})\r\n\t\t} else {\r\n\t\t\tthis.setState({currentTestStage: \"result\"});\r\n\t\t}\r\n\t}\r\n\thandleStartClick = () => {\r\n\t\tthis.setState({currentTestStage: 'test'});\r\n\t}\r\n\thandleResultExit = () => {\r\n\t\tTest.requestInitialState()\r\n\t\t.then(words => this.setState({\r\n\t\t\tcurrentTestStage: 'prestart',\r\n\t\t\tanswers: [],\r\n\t\t\tcurrentWordIdx: 0,\r\n\t\t\twords: words\r\n\t\t}))\r\n\t}\r\n\tstatic requestInitialState() {\r\n\t\treturn DataService.getWords(\"select=toRepetition\");\r\n\t}\r\n\trender() {\r\n\t\tconst {currentTestStage, words, answers} = this.state;\r\n\t\tlet jsx;\r\n\r\n\t\tif (currentTestStage == 'prestart') {\r\n\t\t\tfunction getPostfix(amount) {\r\n\t\t\t\tif (amount == 1) return 'о';\r\n\t\t\t\tif (amount > 0 && amount < 5) return \"а\";\r\n\t\t\t\telse return ''\r\n\t\t\t}\r\n\r\n\t\t\tconst wordsAmount = this.state.words.length;\r\n\t\t\tconst postfix = getPostfix(wordsAmount);\r\n\r\n\t\t\tjsx = [\r\n\t\t\t\t<p key='paragraph'> К повторению {wordsAmount} слов{postfix} </p>,\r\n\t\t\t\t<Button key='btnStart' onClick={this.handleStartClick} disabled={words.length === 0}>Начать</Button>\r\n\t\t\t]\r\n\t\t} else if (currentTestStage == 'test') {\r\n\t\t\tlet currentWordIdx = this.state.currentWordIdx;\r\n\t\t\tlet currentWord = this.state.words[currentWordIdx];\r\n\r\n\t\t\tjsx = <TestWord key='word' word={currentWord} onTest={this.handleTestWord} />\r\n\t\t} else if (currentTestStage == 'result') {\r\n\t\t\tjsx = <Result key='result' words={words} answers={answers} onExit={this.handleResultExit} />\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<div style={{width: \"50%\", margin: \"75px auto\", textAlign: \"center\"}} >\r\n\t\t\t\t{jsx}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/shared/Test/Test.js","module.exports = require(\"react-dom\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-dom\"\n// module id = 10\n// module chunks = 0","import React, { Component } from 'react';\r\nimport {\r\n\tTable,\r\n\tButton\r\n} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\nimport moment from 'moment';\r\n\r\nimport DataService from '../../browser/dataService';\r\nimport Row from './Row';\r\nimport MyPagination from './MyPagination/MyPagination';\r\n\r\nexport default class Dictionary extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tlet initialState;\r\n\r\n\t\tif (props.staticContext) {\r\n\t\t\tinitialState = props.staticContext.initialState;\r\n\t\t} else {\r\n\t\t\tinitialState = window.__initialState__;\r\n\t\t\tdelete window.__initialState__;\r\n\t\t}\r\n\r\n\t\tthis.state = {\r\n\t\t\twords: initialState&&initialState.wordsLastDay||[],\r\n\t\t\tactivePage: initialState&&Math.max(...initialState.daysHaveEntries)||null,\r\n\t\t\tdaysHaveEntries: initialState&&initialState.daysHaveEntries||[],\r\n\t\t\twordsCount: initialState&&initialState.wordsCount||0,\r\n\t\t\tyearsHaveEntries: initialState&&initialState.yearsHaveEntries||[],\r\n\t\t\tmonthsHaveEntries: initialState&&initialState.monthsHaveEntries||[],\r\n\t\t\tactiveYear: initialState&&this.getRecent(initialState.yearsHaveEntries)||null,\r\n\t\t\tactiveMonth: initialState&&this.getRecent(initialState.monthsHaveEntries)||null\r\n\t\t}\t\t\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif (!this.state.words.length) {\r\n\t\t\tDictionary\r\n\t\t\t.requestInitialState()\r\n\t\t\t.then(initialState => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\twords: initialState.wordsLastDay, \r\n\t\t\t\t\twordsCount: initialState.wordsCount,\r\n\t\t\t\t\tyearsHaveEntries: initialState.yearsHaveEntries,\r\n\t\t\t\t\tmonthsHaveEntries: initialState.monthsHaveEntries,\r\n\t\t\t\t\tdaysHaveEntries: initialState.daysHaveEntries,\r\n\t\t\t\t\tactivePage: Math.max(...initialState.daysHaveEntries),\r\n\t\t\t\t\tactiveYear: initialState&&this.getRecent(initialState.yearsHaveEntries)||null,\r\n\t\t\t\t\tactiveMonth: initialState&&this.getRecent(initialState.monthsHaveEntries)||null\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\thandleRemoveWord = (id) => {\r\n\t\tDataService.removeWord(id)\r\n\t\t.then(() => this.setState({\r\n\t\t\twords: this.state.words.filter(word => word.id !== id)\r\n\t\t}))\r\n\t}\r\n\r\n\thandleSelectPage = (selectedDate) => {\r\n\t\tif (this.state.activePage !== selectedDate) {\r\n\t\t\tDataService.getWordsByDate({\r\n\t\t\t\tyear: this.state.activeYear,\r\n\t\t\t\tmonth: this.state.activeMonth,\r\n\t\t\t\tdate: selectedDate\r\n\t\t\t})\r\n\t\t\t.then(words => {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\twords,\r\n\t\t\t\t\tactivePage: selectedDate\r\n\t\t\t\t})\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err))\r\n\t\t}\r\n\t}\r\n\r\n\thandleChangeMonth = (newActiveMonth) => {\r\n\t\tif (this.state.activeMonth === newActiveMonth) return;\r\n\r\n\t\tDataService.getWordsByMonth({\r\n\t\t\tyear: this.state.activeYear,\r\n\t\t\tmonth: newActiveMonth\r\n\t\t})\r\n\t\t.then(res => {\r\n\t\t\tconst {daysHaveEntries, wordsLastDay} = res;\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\twords: wordsLastDay,\r\n\t\t\t\tactiveMonth: newActiveMonth,\r\n\t\t\t\tdaysHaveEntries,\r\n\t\t\t\tactivePage: Math.max(...daysHaveEntries)\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\tstatic requestInitialState() {\r\n\t\treturn DataService.getInitialStateForDictionary();\r\n\t}\r\n\r\n\tgetRecent(arr) {\r\n\t\treturn Math.max(...arr);\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst {\r\n\t\t\twords,\r\n\t\t\tactivePage,\r\n\t\t\twordsCount,\r\n\t\t\tyearsHaveEntries,\r\n\t\t\tmonthsHaveEntries,\r\n\t\t\tdaysHaveEntries,\r\n\t\t\tactiveMonth\r\n\t\t} = this.state;\r\n\r\n\t\tconst rows = words&&words.map(\r\n\t\t\t(word, i) => <Row key={i} word={word} onRemove={this.handleRemoveWord} />\r\n\t\t)\r\n\r\n\t\tconst recentMonth = moment().set({\r\n\t\t\t\"year\": this.getRecent(yearsHaveEntries), \r\n\t\t\t\"month\": this.getRecent(monthsHaveEntries)\r\n\t\t});\r\n\t\tconst pages = Array.from({length: recentMonth.daysInMonth()}, (i, idx) => idx+1);\r\n\r\n\t\tconst disabledPages = pages.filter(p => daysHaveEntries.indexOf(p) === -1)\r\n\r\n\t\treturn (\r\n\t\t\t<div style={{width: \"50%\", margin: '75px auto'}}>\r\n\t\t\t\t<span>{`Слов в словаре: ${wordsCount}`}</span>\r\n\t\t\t\t<p key='add-word'>\r\n\t\t\t\t\t<LinkContainer to=\"/dictionary/create-word\" exact> \r\n\t\t\t\t\t\t<Button>Добавить</Button>\r\n\t\t\t\t\t</LinkContainer>\r\n\t\t\t\t</p>\r\n\t\t\t\t<Table key='table' striped bordered condensed hover >\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{rows}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t\t<MyPagination \r\n\t\t\t\t\tkey=\"my-pagination\"\r\n\t\t\t\t\tactivePage={activePage} \r\n\t\t\t\t\tdisabledPages={disabledPages} \r\n\t\t\t\t\tpages={pages} \r\n\t\t\t\t\tactiveMonth={activeMonth}\r\n\t\t\t\t\tavailableMonths={monthsHaveEntries}\r\n\t\t\t\t\tavailableYears={yearsHaveEntries}\r\n\t\t\t\t\tonChangeMonth={this.handleChangeMonth}\r\n\t\t\t\t\tonSelectPage={this.handleSelectPage}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/shared/Dictionary/Dictionary.js","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n\tFormGroup,\r\n\tControlLabel,\r\n\tFormControl,\r\n\tButton\r\n} from 'react-bootstrap';\r\nimport moment from 'moment';\r\n\r\nimport DataService from '../../browser/dataService';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class WordForm extends Component {\r\n\tstatic contextTypes = {\r\n\t\trouter: PropTypes.shape({\r\n\t\t\thistory: PropTypes.object.isRequired,\r\n\t\t})\r\n\t}\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.defaultState = {\r\n\t\t\tid: this.props.id||null,\r\n\t\t\tmode: props.mode,\r\n\t\t\ten: props.en||'',\r\n\t\t\tru: props.ru&&decodeURIComponent(props.ru)||''\r\n\t\t}\r\n\r\n\t\tthis.state = this.defaultState;\r\n\t}\r\n\r\n\tfocusToInput() {\r\n\t\t\tlet node = ReactDOM.findDOMNode(this.input);\r\n\t\t\tif (node && node.focus instanceof Function) {\r\n\t\t\t\t\tnode.focus();\r\n\t\t\t}\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.focusToInput();\r\n\t}\r\n\r\n\thandleInputChange = (e) => {\r\n\t\tthis.setState({[e.target.name]: e.target.value});\r\n\t}\r\n\thandleSubmit = () => {\r\n\t\tconst {id, en, ru, createdDate, repetitionDate, repetitionCount} = this.state;\r\n\r\n\t\tconst word = {id, en, ru , createdDate, repetitionDate, repetitionCount};\r\n\r\n\t\tif (this.state.mode == 'create') {\r\n\t\t\tconst initialData = {\r\n\t\t\t\tcreatedDateISO: moment().toISOString(),\r\n\t\t\t\trepetitionDate: moment().add(5, 'm').toISOString(),\r\n\t\t\t\trepetitionCount: 0,\r\n\t\t\t\tattemptCount: 0\r\n\t\t\t}\r\n\t\t\tthis.createOnServer({...word, ...initialData});\r\n\r\n\t\t\tthis.setState(this.defaultState);\r\n\t\t\tthis.focusToInput();\r\n\t\t} else if (this.state.mode == 'edit') {\r\n\t\t\tthis.updateOnServer(word);\r\n\r\n\t\t\tthis.context.router.history.goBack();\r\n\t\t}\r\n\r\n\t\tconsole.log(word);\r\n\t}\r\n\tcreateOnServer(word) {\r\n\t\tDataService.createWord(word);\r\n\t}\r\n\tupdateOnServer(word) {\r\n\t\tDataService.updateWord(word);\r\n\t}\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<form style={{width: \"25%\", margin: '75px auto'}}>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>\r\n\t\t\t\t\t\tпо-английский\r\n\t\t\t\t\t</ControlLabel>\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\tname=\"en\"\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={this.state.en}\r\n\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t\tref={(input) => this.input = input}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<FormGroup>\r\n\t\t\t\t\t<ControlLabel>\r\n\t\t\t\t\t\tпо-русски\r\n\t\t\t\t\t</ControlLabel>\r\n\t\t\t\t\t<FormControl\r\n\t\t\t\t\t\tname=\"ru\"\r\n\t\t\t\t\t\ttype='text'\r\n\t\t\t\t\t\tvalue={this.state.ru}\r\n\t\t\t\t\t\tonChange={this.handleInputChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</FormGroup>\r\n\t\t\t\t<Button onClick={this.handleSubmit}>{this.state.mode === 'edit' ? 'Изменить' : 'Добавить'}</Button>\r\n\t\t\t\t<Link to='/dictionary' style={{marginLeft: 80, fontSize: 11}}> обратно в словарь </Link>\r\n\t\t\t</form>\r\n\t\t);  \r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/shared/Dictionary/WordForm.js","import serialize from 'serialize-javascript';\r\nimport express from 'express';\r\nimport React from 'react';\r\nimport {renderToString} from 'react-dom/server';\r\nimport sourceMapSupport from 'source-map-support';\r\nimport mongoose from 'mongoose';\r\nimport fetch from 'isomorphic-fetch';\r\nimport bodyParser from 'body-parser';\r\nimport {StaticRouter, matchPath} from 'react-router-dom';\r\n\r\nimport connectDB from './db/connect';\r\nimport App from '../shared/App'\r\nimport wordCtrl from './db/controllers/word';\r\nimport routes from '../shared/routes';\r\n\r\nif (process.env.NODE_ENV==='development') {\r\n\tsourceMapSupport.install()\r\n}\r\n\r\nconst app = express();\r\n\r\napp.use(bodyParser.urlencoded({ extended: true }));\r\napp.use(bodyParser.json());\r\n\r\napp.use(express.static('public'));\r\n\r\nconnectDB();\r\n\r\napp.get('/api/words', wordCtrl.getWords);\r\napp.get('/api/words/count', wordCtrl.getCount);\r\napp.get('/api/wordsByDate', wordCtrl.getWordsByDate);\r\napp.get('/api/wordsByMonth', wordCtrl.getWordsByMonth);\r\napp.post('/api/words', wordCtrl.create);\r\napp.put('/api/words', wordCtrl.update);\r\napp.delete('/api/words/:id', wordCtrl.remove);\r\n\r\n\r\n\r\napp.get('*', (req, res, next) => {\r\n\tif (req.url == '/favicon.ico'||req.url == '/robots.txt') return next();\r\n\r\n\tconst currentRoute = routes.find(route => matchPath(req.url, route));\r\n\tconst requestInitialState = \r\n\t\tcurrentRoute.component.requestInitialState && currentRoute.component.requestInitialState();\r\n\r\n\tPromise.resolve(requestInitialState)\r\n\t.then(initialState => {\r\n\r\n\t\tconst markup = renderToString(\r\n\t\t\t<StaticRouter location={req.url} context={{initialState}}>\r\n\t\t\t\t<App />\r\n\t\t\t</StaticRouter>\r\n\t\t);\r\n\r\n    // JSON.stringify(initialState) - делает наше приложение уязвимым для XSS и code-injection\r\n    // use serialize-javascript\r\n\t\treturn res.send(`\r\n\t\t\t<!DOCTYPE html>\r\n\t\t\t<html lang=\"en\">\r\n\t\t\t<head>\r\n\t\t\t\t<meta charset=\"UTF-8\">\r\n\t\t\t\t<title>Document</title>\r\n\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"/css/main.css\">\r\n\t\t\t\t<link rel=\"stylesheet\" type=\"text/css\" href=\"https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css\"\r\n\t\t\t\t<!-- Latest compiled and minified CSS -->\r\n\t\t\t\t<link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" integrity=\"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u\" crossorigin=\"anonymous\">\r\n\t\t\t\t<script src='/bundle.js' defer> </script>\r\n\t\t\t\t<script>\r\n\t\t\t\t\twindow.__initialState__ = ${serialize(initialState)}\r\n\t\t\t\t</script>\r\n\t\t\t</head>\r\n\t\t\t<body>\r\n\t\t\t\t<div id='root'>${markup}</div>\r\n\t\t\t</body>\r\n\t\t\t</html>\r\n\t\t`)\r\n\t})\r\n})\r\n\r\napp.listen(process.env.PORT||'3000', () => {\r\n\tconsole.log(\"server is run!\")\r\n})\n\n\n// WEBPACK FOOTER //\n// src/server/index.js","module.exports = require(\"serialize-javascript\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"serialize-javascript\"\n// module id = 14\n// module chunks = 0","module.exports = require(\"express\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"express\"\n// module id = 15\n// module chunks = 0","module.exports = require(\"react-dom/server\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-dom/server\"\n// module id = 16\n// module chunks = 0","module.exports = require(\"source-map-support\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"source-map-support\"\n// module id = 17\n// module chunks = 0","module.exports = require(\"isomorphic-fetch\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"isomorphic-fetch\"\n// module id = 18\n// module chunks = 0","module.exports = require(\"body-parser\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"body-parser\"\n// module id = 19\n// module chunks = 0","import mongoose from 'mongoose';\r\nimport db from './constants';\r\nimport loadModels from './models';\r\nimport Word from './models/word';\r\nimport moment from 'moment';\r\n\r\nfunction connect() {\r\n\t(() => {\r\n\t\tmongoose.connect(db, (err) => {\r\n\t\t\tif (err) {\r\n\t\t\t\tconsole.log(`Error connection to ${db}`);\r\n\t\t\t\tconsole.log(`Reason ${err}`);\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.log(`Succeeded in connecting to ${db}`)\r\n\t\t\t}\r\n\t\t})\r\n\t})();\r\n\r\n\tmongoose.connection.on('error', console.log);\r\n\tmongoose.connection.on('disconnected', connect);\r\n\tloadModels();\r\n\t\r\n}\r\n\r\nexport default connect;\n\n\n// WEBPACK FOOTER //\n// src/server/db/connect.js","const address = process.env.MONGOHQ_URL || process.env.MONGODB_URI || 'mongodb://test:test123@ds147974.mlab.com:47974/learn-english';\r\n\r\nexport default address;\n\n\n// WEBPACK FOOTER //\n// src/server/db/constants.js","export default () => {\r\n\trequire('./word')\r\n}\n\n\n// WEBPACK FOOTER //\n// src/server/db/models/index.js","module.exports = require(\"meanie-mongoose-to-json\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"meanie-mongoose-to-json\"\n// module id = 23\n// module chunks = 0","import React, { Component } from 'react';\r\nimport {Switch, Route, Link} from 'react-router-dom';\r\n\r\nimport routes from './routes';\r\nimport './App.css';\r\nimport Test from './Test/Test';\r\nimport Dictionary from './Dictionary/Dictionary';\r\nimport NavBar from './NavBar';\r\nimport {Grid, Row, Col} from 'react-bootstrap';\r\n\r\nclass App extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\t\r\n\t}\r\n\r\n\trender() {\r\n\t\treturn [\r\n\t\t\t<NavBar key={'navbar'} />,\r\n\t\t\t<Grid key={'content'}>\r\n\t\t\t\t<Row>\r\n\t\t\t\t\t<Col md={12}>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t{routes.map((route, i) => <Route key={i} {...route} />)}\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\t\t\t</Grid>\r\n\t\t]\r\n\t}\r\n}\r\n\r\nexport default App;\n\n\n// WEBPACK FOOTER //\n// src/shared/App.js","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {FormControl} from 'react-bootstrap';\r\n\r\nexport default class TestWord extends Component {\r\n\tstate = {\r\n\t\tvalue: ''\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tReactDOM.findDOMNode(this.input).focus();\r\n\t}\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({value: e.target.value});\r\n\t}\r\n\trender() {\r\n\t\treturn [\r\n\t\t\t<div key='test-word'>{this.props.word.ru}</div>,\r\n\t\t\t<FormControl \r\n\t\t\t\tkey='answer'\r\n\t\t\t\ttype='text' \r\n\t\t\t\tvalue={this.state.value} \r\n\t\t\t\tonChange={this.handleChange} \r\n\t\t\t\tref={(i) => this.input = i}\r\n\t\t\t\tonKeyPress={(e) => {\r\n\t\t\t\t\tif (e.key !== 'Enter') return;\r\n\t\t\t\t\tthis.setState({value: ''});\r\n\t\t\t\t\tthis.props.onTest(this.state.value);\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t];\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/shared/Test/TestWord.js","\timport React, { Component } from 'react';\r\n\timport {Table, Button} from 'react-bootstrap';\r\n\timport moment from 'moment';\r\n\r\n\timport DataService from '../../browser/dataService';\r\n\r\n\texport default class Result extends Component {\r\n\t\tconstructor(props) {\r\n\t\t\tsuper(props);\r\n\r\n\t\t\tthis.state = {\r\n\t\t\t\tresults: props.words.map((word, i) => ({word, answer: props.answers[i], isRight: this.isRight(word, props.answers[i])}))\r\n\t\t\t}\r\n\t\t}\r\n\t\tcomponentDidMount() {\r\n\t\t\tconst getNextInterval = (repetitionCount) => {\r\n\t\t\t\t\t// Y = 2X + 1\r\n\t\t\t\t\t// Y = новый интервал в днях, X - предидущий интервал\r\n\t\t\t\tif (repetitionCount === 0) return 0;\r\n\t\t\t\tif (repetitionCount === 1) return 1;\r\n\r\n\t\t\t\treturn 2 * getNextInterval(repetitionCount-1) + 1;\r\n\t\t\t}\r\n\t\t\tthis.state.results.forEach(\r\n\t\t\t\t(result) => {\r\n\t\t\t\t\tlet word = result.word,\r\n\t\t\t\t\t\t\tinterval;\r\n\t\t\t\t\tif (result.isRight) {\r\n\t\t\t\t\t\tword.repetitionCount++;\r\n\t\t\t\t\t\tinterval = getNextInterval(word.repetitionCount);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tif (word.repetitionCount !== 0) {\r\n\t\t\t\t\t\t\tword.repetitionCount--;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tinterval = getNextInterval(word.repetitionCount);\r\n\t\t\t\t\t}\r\n\t\t\t\t\tword.repetitionDate = moment().add(interval, 'day');\r\n\t\t\t\t\tDataService.updateWord(word)\r\n\t\t\t\t}\r\n\t\t\t)\r\n\t\t}\r\n\t\tisRight(word, answer) {\r\n\t\t\tconsole.log(word);\r\n\t\t\tconsole.log(answer);\r\n\t\t\treturn word.en.trim() === answer.trim();\r\n\t\t}\r\n\t\trender() {\r\n\t\t\tconst {words, answers} = this.props;\r\n\t\t\tconst Row = ({word, answer, isRight}) => (\r\n\t\t\t\t<tr  className={isRight ? \"success\" : \"danger\"}>\r\n\t\t\t\t\t<td>{word.en}</td>\r\n\t\t\t\t\t<td>{word.ru}</td>\r\n\t\t\t\t\t<td>{answer}</td>\r\n\t\t\t\t</tr>\r\n\t\t\t)\r\n\t\t\treturn [\r\n\t\t\t\t<Table key='table' striped bordered condensed hover >\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t<th>EN</th>\r\n\t\t\t\t\t\t\t<th>RU</th>\r\n\t\t\t\t\t\t\t<th>Ответ</th>\r\n\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t{words.map(\r\n\t\t\t\t\t\t\t(word, i) => <Row word={word} answer={answers[i]} key={i} isRight={this.isRight(word, answers[i])} />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>,\r\n\t\t\t\t<Button key=\"button-ok\" onClick={this.props.onExit}>OK</Button>\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n\n\n\n// WEBPACK FOOTER //\n// src/shared/Test/Result.js","import React, { Component } from 'react';\r\nimport {Button} from 'react-bootstrap';\r\nimport FontAwesome from 'react-fontawesome';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\n\r\nexport default ({word, onRemove}) => {\r\n\tconst {ru, en, id} = word;\r\n\r\n\tconst wordToParams = () => {\r\n\t\treturn `id=${id}&en=${en}&ru=${ru}`\r\n\t}\r\n\treturn (\r\n\t<tr>\r\n\t\t<td>{ru}</td>\r\n\t\t<td>{en}</td>\r\n\t\t<td>\r\n\t\t\t<LinkContainer to={`/dictionary/edit-word/${wordToParams()}`}>\r\n\t\t\t\t<Button >\r\n\t\t\t\t\t<FontAwesome name='edit' />\r\n\t\t\t\t</Button>\r\n\t\t\t</LinkContainer>\r\n\t\t\t<Button onClick={() => onRemove(id)}>\r\n\t\t\t\t<FontAwesome name='trash' />\r\n\t\t\t</Button>\r\n\t\t</td>\r\n\t</tr>\t\r\n\t)\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/shared/Dictionary/Row.js","module.exports = require(\"react-fontawesome\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"react-fontawesome\"\n// module id = 28\n// module chunks = 0","import React, { Component } from 'react';\r\nimport './MyPagination.css';\r\nimport {Pagination, Dropdown, MenuItem} from 'react-bootstrap';\r\n\r\nimport MyToggle from '../../MyToggle/MyToggle';\r\n\r\nexport default class MyPagination extends Component {\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tpages,\r\n\t\t\tdisabledPages,\r\n\t\t\tactivePage,\r\n\t\t\tonSelectPage,\r\n\t\t\tactiveMonth,\r\n\t\t\tonChangeMonth,\r\n\t\t\tavailableMonths,\r\n\t\t\tavailableYears\r\n\t\t} = this.props;\r\n\r\n\t\tconst months = [\r\n\t\t\t\"январь\",\r\n\t\t\t\"февраль\",\r\n\t\t\t\"март\",\r\n\t\t\t\"апрель\",\r\n\t\t\t\"май\",\r\n\t\t\t\"июнь\",\r\n\t\t\t\"июль\",\r\n\t\t\t\"август\",\r\n\t\t\t\"сентябрь\",\r\n\t\t\t\"октябрь\",\r\n\t\t\t\"ноябрь\",\r\n\t\t\t\"декабрь\"\r\n\t\t]\r\n\r\n\t\tfunction isDisabled(currentPage) {\r\n\t\t\treturn disabledPages.some(page => page === currentPage)\r\n\t\t}\r\n\r\n\t\tfunction isDisabledMonth(currentMonthNmb) {\r\n\t\t\treturn availableMonths.indexOf(currentMonthNmb) === -1\r\n\t\t}\r\n\r\n\t\tfunction getMonthName(monthNmb) {\r\n\t\t\treturn months[monthNmb]\r\n\t\t}\r\n\r\n\t\treturn [\r\n\t\t\t<div key={1} className=\"pagination-header\">\r\n\t\t\t\t<Dropdown id=\"month\" className=\"my-dropdown\">\r\n\t\t\t\t\t<MyToggle bsRole=\"toggle\">\r\n\t\t\t\t\t\t{getMonthName(activeMonth)}\r\n\t\t\t\t\t</MyToggle>\r\n\r\n\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t{months.map((m, i) => (\r\n\t\t\t\t\t\t\t<MenuItem \r\n\t\t\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\t\t\tactive={m === getMonthName(activeMonth)}\r\n\t\t\t\t\t\t\t\tonSelect={() => onChangeMonth(i)}\r\n\t\t\t\t\t\t\t\tdisabled={isDisabledMonth(i)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{m}\r\n\t\t\t\t\t\t\t</MenuItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t</Dropdown>\r\n\t\t\t\t<Dropdown id=\"year\" className=\"my-dropdown\">\r\n\t\t\t\t\t<MyToggle bsRole=\"toggle\">2018</MyToggle>\r\n\r\n\t\t\t\t\t<Dropdown.Menu>\r\n\t\t\t\t\t\t{availableYears.map((y, i) => (\r\n\t\t\t\t\t\t\t<MenuItem key={i}>{y}</MenuItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</Dropdown.Menu>\r\n\t\t\t\t</Dropdown>\r\n\t\t\t</div>,\r\n\t\t\t<Pagination key={2} bsSize=\"medium\">\r\n\t\t\t\t{pages.map((i) => (\r\n\t\t\t\t\t<Pagination.Item \r\n\t\t\t\t\t\tkey={i} \r\n\t\t\t\t\t\tactive={i === activePage}\r\n\t\t\t\t\t\tdisabled={isDisabled(i)}\r\n\t\t\t\t\t\tonClick={() => !isDisabled(i)&&onSelectPage(i)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{i}\r\n\t\t\t\t\t</Pagination.Item>\r\n\t\t\t\t))}\r\n\t\t\t</Pagination>\r\n\t\t];\r\n\t}\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/shared/Dictionary/MyPagination/MyPagination.js","import React, {Component} from 'react';\r\n\r\nexport default class MyToggle extends React.Component {\r\n  constructor(props, context) {\r\n    super(props, context);\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick(e) {\r\n    e.preventDefault();\r\n\r\n    this.props.onClick(e);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <a href=\"\" onClick={this.handleClick}>\r\n        {this.props.children}\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/shared/MyToggle/MyToggle.js","import React, { Component } from 'react';\r\n\r\nimport WordForm from './WordForm';\r\n\r\nexport default () => {\r\n\treturn <WordForm mode='create' />\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/shared/Dictionary/CreateWordForm.js","module.exports = require(\"prop-types\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"prop-types\"\n// module id = 33\n// module chunks = 0","import React, { Component } from 'react';\r\n\r\nimport WordForm from './WordForm';\r\n\r\nexport default (props) => {\r\n\tconst {id, en, ru} = props.match.params;\r\n\treturn (\r\n\t\t<WordForm id={id} en={en} ru={ru} mode=\"edit\"/>\r\n\t);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/shared/Dictionary/EditWordForm.js","import React, { Component } from 'react';\r\nimport {\r\n\tNavbar,\r\n\tNav,\r\n\tNavItem,\r\n\tNavDropdown,\r\n\tMenuItem\r\n} from 'react-bootstrap';\r\nimport {LinkContainer} from 'react-router-bootstrap';\r\n\r\nexport default () => {\r\n\treturn (\r\n\t\t<Navbar>\r\n\t\t  <Navbar.Header>\r\n\t\t    <Navbar.Brand>\r\n\t\t      Учи английский\r\n\t\t    </Navbar.Brand>\r\n\t\t  </Navbar.Header>\r\n\t\t  <Nav>\r\n\t\t \t\t<LinkContainer\r\n\t\t \t\t\tto='/'\r\n\t\t \t\t\texact\r\n\t\t \t\t>\r\n\t\t \t\t\t<NavItem href='/'>\r\n      \t\t\tПроверить\r\n    \t\t\t</NavItem>\r\n\t\t \t\t</LinkContainer>\r\n\t\t\t\t<LinkContainer\r\n\t\t \t\t\tto='/dictionary'\r\n\t\t \t\t\texact\r\n\t\t \t\t>\r\n\t\t \t\t\t<NavItem href='/dictionary'>\r\n      \t\t\tСловарь\r\n    \t\t\t</NavItem>\r\n\t\t \t\t</LinkContainer>\r\n\t\t  </Nav>\r\n\t\t</Navbar>\r\n\t);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// src/shared/NavBar.js","import Word from '../models/word';\r\nimport moment from 'moment';\r\n\r\nexport default {\r\n\tgetCount(req, res) {\r\n\t\tWord\r\n\t\t.count({})\r\n\t\t.then(count => res.json(count))\r\n\t},\r\n\tgetWords(req, res) {\r\n\t\tlet {query} = req;\r\n\t\tif (query.select === 'toRepetition') {\r\n\t\t\tquery = {\r\n\t\t\t\trepetitionDate: {\"$lt\": moment().endOf('day')}\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (query.select === 'recent') {\r\n\t\t\tconst result = {};\r\n\t\t\tlet lastEntry;\r\n\r\n\t\t\treturn Word\r\n\t\t\t// get latest entry\r\n\t\t\t.findOne()\r\n\t\t\t.sort({\"createdDate.year\": -1, \"createdDate.month\": -1, \"createdDate.day\": -1})\r\n\t\t\t.then(word => {\r\n\t\t\t\tlastEntry = word;\r\n\r\n\t\t\t\treturn Word\r\n\t\t\t\t.find({\t\r\n\t\t\t\t\t\"createdDate.day\": lastEntry.createdDate.day\r\n\t\t\t\t})\r\n\t\t\t\t.sort({createdDate: -1})\r\n\t\t\t})\r\n\t\t\t/* get array months \r\n\t\t\t\t[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t_id: 1,\r\n\t\t\t\t\t\tdaysHaveEntries: [10, 20, 2, 3, 4]\r\n\t\t\t\t\t},\r\n\t\t\t\t\t...\r\n\t\t\t\t]\r\n\t\t\t*/\r\n\t\t\t.then(wordsLastDay => {\r\n\t\t\t\tresult.wordsLastDay = wordsLastDay;\r\n\t\t\t\treturn Word.aggregate([\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$match: {\"createdDate.year\": lastEntry.createdDate.year}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$group: {\r\n\t\t\t\t\t\t\t_id: \"$createdDate.month\",\r\n\t\t\t\t\t\t\tdaysHaveEntries: {$addToSet: \"$createdDate.day\"}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t$sort: {\r\n\t\t\t\t\t\t\t_id: -1\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t])\r\n\t\t\t})\r\n\t\t\t.then(months => {\r\n\t\t\t\tresult.daysHaveEntries = months[0].daysHaveEntries;\r\n\t\t\t\tresult.monthsHaveEntries = months.map(m => m._id)\r\n\t\t\t\treturn Word.find({}).distinct('createdDate.year');\r\n\t\t\t})\r\n\t\t\t.then(years => {\r\n\t\t\t\tresult.yearsHaveEntries = years;\r\n\r\n\t\t\t\tconsole.log(result);\r\n\r\n\t\t\t\treturn res.json(result);\r\n\t\t\t})\r\n\t\t\t.catch(err => console.log(err))\r\n\t\t}\r\n\r\n\t\tWord\r\n\t\t.find(query)\r\n\t\t.then(words => res.json(words||[]))\r\n\t\t.catch(err => console.log(err))\r\n\t},\r\n\tgetWordsByDate(req, res) {\r\n\t\tlet {date, year, month} = req.query;\r\n\r\n\t\tWord\r\n\t\t.find({\r\n\t\t\t\"createdDate.year\": year,\r\n\t\t\t\"createdDate.month\": month,\r\n\t\t\t\"createdDate.day\": date\r\n\t\t})\r\n\t\t.then(words => res.json(words))\r\n\t\t.catch(err => console.log(err))\r\n\t},\r\n\tgetWordsByMonth(req, res) {\r\n\t\tlet {month, year} = req.query;\r\n\t\tconsole.log(month)\r\n\t\tWord\r\n\t\t.find({\r\n\t\t\t\"createdDate.year\": year,\r\n\t\t\t\"createdDate.month\": month\r\n\t\t})\r\n\t\t.sort({\r\n\t\t\t\"createdDate.day\": -1\r\n\t\t})\r\n\t\t.then(words => {\r\n\t\t\tconst latestDateInMonth= words[0].createdDate.day;\r\n\t\t\tconst daysHaveEntries = [];\r\n\r\n\t\t\twords.forEach(w => daysHaveEntries.indexOf(w.createdDate.day) === -1 && daysHaveEntries.push(w.createdDate.day));\r\n\r\n\t\t\tconst wordsLastDay = words.filter(w => w.createdDate.day === latestDateInMonth);\r\n\r\n\t\t\treturn res.json({\r\n\t\t\t\twordsLastDay,\r\n\t\t\t\tdaysHaveEntries\r\n\t\t\t})\r\n\t\t})\r\n\t},\r\n\tcreate(req, res) {\r\n\t\tWord\r\n\t\t.create(req.body)\r\n\t\t.then(word => {\r\n\t\t\tconsole.log(word);\r\n\r\n\t\t\tres.json(word)\r\n\t\t})\r\n\t\t.catch(err => console.log(err))\r\n\t},\r\n\tupdate(req, res) {\r\n\t\tWord\r\n\t\t.findOneAndUpdate({_id: req.body.id}, req.body, {new: true})\r\n\t\t.then(word => res.json(word))\r\n\t\t.catch(err => console.log(err))\r\n\t},\r\n\tremove(req, res) {\r\n\t\tlet {id} = req.params;\r\n\r\n\t\tWord\r\n\t\t.remove({_id: id})\r\n\t\t.then(deletedWord => res.json(deletedWord))\r\n\t\t.catch(err => console.log(err))\r\n\t}\r\n}\n\n\n// WEBPACK FOOTER //\n// src/server/db/controllers/word.js"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;A;;;;AC7DA;;;;;;ACAA;;;;;;ACAA;;;;;;;ACAA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AArDA;;;;;;ACLA;;;;;;ACAA;;;;;;;;;;;;;;;ACCA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAXA;AACA;AAaA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;;;;;;ACjDA;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAHA;AACA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AA0BA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AArCA;AAsCA;AACA;AACA;AAxCA;AAyCA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAMA;AACA;AA9CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAZA;AAkBA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;;;AA2BA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAIA;;;AAlCA;AACA;AACA;;;;AApDA;AACA;AADA;;;;;;ACPA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AA4CA;AACA;AACA;AAAA;AAAA;AADA;AAAA;AAGA;AACA;AAjDA;AAmDA;AACA;AACA;AACA;AACA;AAHA;AAMA;AACA;AACA;AAFA;AAIA;AACA;AAAA;AACA;AACA;AACA;AAlEA;AAoEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AAlFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAZA;AAsBA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA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","sourceRoot":""}